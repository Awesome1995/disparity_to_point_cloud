<launch>
  <arg name="min_count" default="20" />
  <arg name="disparity_threshold" default="1" />

  <node pkg="disparity_to_point_cloud" type="disparity_to_point_cloud_node" name="disparity_to_point_cloud" output="screen">
    <remap to="/depth_map_1" from="/disparity"/>
    <remap to="/omi_cam/point_cloud" from="/point_cloud"/>
    <param name="min_count" value="$(arg min_count)" />
    <param name="disparity_threshold" value="$(arg disparity_threshold)" />
  </node>

  <!-- <node name="tf_fix_broad" pkg="disparity_to_point_cloud" type="fix_tf.py" respawn="false" output="screen" ></node> -->
  <node pkg="tf" type="static_transform_publisher" name="camera_tf_broadcaster" args="0.1 0 0 3.14 0 0 body_frame camera_optical_frame 100" />


  <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
    <param name="resolution" value="0.05" />
          <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
          <param name="frame_id" type="string" value="world" />
          <!-- maximum range to integrate (speedup!) -->
          <param name="sensor_model/max_range" value="50.0" />
          <!-- data source to integrate (PointCloud2) -->
          <remap from="cloud_in" to="/omi_cam/plane_cloud" />
   </node>

   <!-- <node pkg="extract_plane" type="extract_plane_node" name="extract_plane" output="screen">
       <remap to="/omi_cam/point_cloud" from="/input_cloud"/>
       <remap to="/omi_cam/plane_cloud" from="/output_cloud"/>
    </node> -->

    <node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find disparity_to_point_cloud)/rviz/d2pc.rviz" />
</launch>
